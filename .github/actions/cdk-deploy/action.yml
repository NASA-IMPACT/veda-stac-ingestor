name: Deploy

inputs:
  env_aws_secret_name:
    required: true
    type: string
  dir:
    required: false
    type: string
    default: "."
  script_path:
    required: true
    type: string
  backend_stack_name:
    required: true
    type: string
  auth_stack_name:
    required: true
    type: string


runs:
  using: "composite"
  steps:
    - name: Install node and related deps
      uses: actions/setup-node@v3
      with:
        node-version: 17.3.0

    - uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install AWS CDK
      shell: bash
      run: npm install -g aws-cdk@2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"
        cache-dependency-path: |
          **/requirements.txt

    - name: Install python dependencies
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        pip install -r requirements.txt

    - name: Get relevant environment configuration from aws secrets
      shell: bash
      working-directory: ${{ inputs.dir }}
      env:
        SECRET_SSM_NAME: ${{ inputs.env_aws_secret_name }}
        AWS_DEFAULT_REGION: us-west-2
      run: |
        if [[ -z "${{ inputs.script_path }}" ]]; then
        ./scripts/sync-env.sh ${{ inputs.env_aws_secret_name }}
        else
        python ${{ inputs.script_path }} --secret-id ${{ inputs.env_aws_secret_name }} --stack-names ${{ inputs.auth_stack_name}},${{ inputs.backend_stack_name}}
        fi

    - name: Deploy
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        cdk deploy --all --require-approval never --outputs-file ${HOME}/cdk-outputs.json
